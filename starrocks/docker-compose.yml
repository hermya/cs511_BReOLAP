version: "3"
services:
  starrocks-fe:
    image: starrocks/fe-ubuntu:2.5.4
    hostname: starrocks-fe
    container_name: starrocks-fe
    user: root
    command:
      /opt/starrocks/fe/bin/start_fe.sh
    ports:
      - 8030:8030
      - 9020:9020
      - 9030:9030
    healthcheck:
      test: 'mysql -uroot -h 172.11.0.2 -P 9030 -e "show frontends\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
#      - fe.conf:/opt/starrocks/fe/conf/fe.conf
      - ./starrocks-vol/starrocks-fe/meta:/opt/starrocks/fe/meta
      - ./starrocks-vol/fe/log:/opt/starrocks/fe/log
    networks:
      network:
        ipv4_address: 172.11.0.2

  starrocks-be:
    image: starrocks/be-ubuntu:2.5.4
    command:
      - /bin/bash
      - -c
      - |
        sleep 15s; mysql --connect-timeout 2 -h starrocks-fe -P 9030 -uroot -e "alter system add backend \"starrocks-be:9050\";"
        /opt/starrocks/be/bin/start_be.sh
    ports:
      - 8040:8040
    hostname: starrocks-be
    container_name: starrocks-be
    user: root
    depends_on:
      - starrocks-fe
    healthcheck:
      test: 'mysql -uroot -h 172.11.0.2 -P 9030 -e "show backends\G" |grep "Alive: true"'
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
#      - be.conf:/opt/starrocks/be/conf/be.conf
      - ./starrocks-vol/starrocks-be/storage:/opt/starrocks/be/storage
      - ./starrocks-vol/starrocks-be/log:/opt/starrocks/be/log
    networks:
      network:
        ipv4_address: 172.11.0.3

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    volumes:
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus
    networks:
      network:
        ipv4_address: 172.11.0.4

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    environment:
      - TERM=linux
      - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
    ports:
      - '3000:3000'
    volumes:
      - 'grafana_storage:/var/lib/grafana'
    networks:
      network:
        ipv4_address: 172.11.0.5

  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      network:
        ipv4_address: 172.11.0.6

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
    networks:
      network:
        ipv4_address: 172.11.0.7

  debezium:
    image: debezium/connect:1.4
    hostname: connect
    container_name: connect
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
    depends_on: [kafka]
    volumes:
      - ./assets/starrocks-kafka-connector-1.0.3:/kafka/connect/
    ports:
      - 8087:8083
    networks:
      network:
        ipv4_address: 172.11.0.8

  schema-registry:
    image: confluentinc/cp-schema-registry:5.5.3
    environment:
      - SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL=zookeeper:2181
      - SCHEMA_REGISTRY_HOST_NAME=schema-registry
      - SCHEMA_REGISTRY_LISTENERS=http://schema-registry:8081,http://localhost:8085
    ports:
      - 8085:8081
    depends_on: [zookeeper, kafka]
    networks:
      network:
        ipv4_address: 172.11.0.9
    
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9500:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - "kafka"
    networks:
      network:
        ipv4_address: 172.11.0.10

networks:
  network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.11.0.0/16
          gateway: 172.11.0.1

volumes:
  grafana_storage: {}
  prom_data: