#
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#
version: "2.2"

volumes:
  metadata_data: {}
  middle_var: {}
  middle_var_2: {}
  middle_var_3: {}
  historical_var: {}
  broker_var: {}
  historical_var_2: {}
  historical_var_3: {}
  historical_var_4: {}
  broker_var_2: {}
  coordinator_var: {}
  router_var: {}
  druid_shared: {}
  grafana_storage: {}
  prom_data:

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    ports:
      - "5432:5432"
    volumes:
      - metadata_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_PASSWORD=FoolishPassword
      - POSTGRES_USER=druid
      - POSTGRES_DB=druid

  # Need 3.5 or later for container nodes
  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.5.10
    ports:
      - "2181:2181"
    environment:
      - ZOO_MY_ID=1

  coordinator:
    image: apache/druid:29.0.0
    container_name: coordinator
    volumes:
      - druid_shared:/opt/shared
      - coordinator_var:/opt/druid/var
      - ./volumes/coordinator_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on:
      - zookeeper
      - postgres
    ports:
      - "8081:8081"
    command:
      - coordinator
    env_file:
      - environment

  broker:
    image: apache/druid:29.0.0
    container_name: broker
    volumes:
      - broker_var:/opt/druid/var
      - ./volumes/broker_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8082:8082"
    command:
      - broker
    env_file:
      - environment

  broker-2:
    image: apache/druid:29.0.0
    container_name: broker-2
    volumes:
      - broker_var_2:/opt/druid/var
      - ./volumes/broker_2_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8084:8082"
    command:
      - broker
    env_file:
      - environment

  historical:
    image: apache/druid:29.0.0
    container_name: historical
    volumes:
      # - #druid_shared:/opt/shared
      - historical_var:/opt/druid/var
      - ./volumes/historical_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8083:8083"
    command:
      - historical
    env_file:
      - environment      

  historical-2:
    image: apache/druid:29.0.0
    container_name: historical-2
    volumes:
      # - #druid_shared:/opt/shared
      - historical_var_2:/opt/druid/var
      - ./volumes/historical_2_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8086:8083"
    command:
      - historical
    env_file:
      - environment

  historical-3:
    image: apache/druid:29.0.0
    container_name: historical-3
    volumes:
      # - #druid_shared:/opt/shared
      - historical_var_3:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8088:8083"
    command:
      - historical
    env_file:
      - environment

  historical-4:
    image: apache/druid:29.0.0
    container_name: historical-4
    volumes:
      # - #druid_shared:/opt/shared
      - historical_var_4:/opt/druid/var
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8089:8083"
    command:
      - historical
    env_file:
      - environment
    
  middlemanager:
    image: apache/druid:29.0.0
    container_name: middlemanager
    volumes:
      # - druid_shared:/opt/shared
      - middle_var:/opt/druid/var
      - ./volumes/middlemanager_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8091:8091"
      - "8100-8105:8100-8105"
    command:
      - middleManager
    env_file:
      - environment

  middlemanager-2:
    image: apache/druid:29.0.0
    container_name: middlemanager-2
    volumes:
      # - druid_shared:/opt/shared
      - middle_var_2:/opt/druid/var
      - ./volumes/middlemanager_2_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8191:8091"
      - "8200-8205:8100-8105"
    command:
      - middleManager
    env_file:
      - environment

  middlemanager-3:
    image: apache/druid:29.0.0
    container_name: middlemanager-3
    volumes:
      # - druid_shared:/opt/shared
      - middle_var_3:/opt/druid/var
      - ./volumes/middlemanager_3_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on: 
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8291:8091"
      - "8300-8305:8100-8105"
    command:
      - middleManager
    env_file:
      - environment

  router:
    image: apache/druid:29.0.0
    container_name: router
    volumes:
      - router_var:/opt/druid/var
      - ./volumes/router_common/common.runtime.properties:/opt/druid/conf/druid/cluster/_common/common.runtime.properties
    depends_on:
      - zookeeper
      - postgres
      - coordinator
    ports:
      - "8888:8888"
    command:
      - router
    env_file:
      - environment
  
  druid_exporter:
    image: quay.io/opstree/druid-exporter:v0.10
    container_name: druid_exporter
    ports:
      - "9080:8080"
    environment:
      - DRUID_URL=http://router:8888
    depends_on:
      - router
    restart: unless-stopped

  # prometheus:
  #   image: prom/prometheus
  #   container_name: prometheus
  #   command:
  #     - '--config.file=/etc/prometheus/prometheus.yml'
  #   ports:
  #     - 9090:9090
  #   volumes:
  #     - ./prometheus:/etc/prometheus
  #     - prom_data:/prometheus

  # grafana:
  #   image: grafana/grafana:latest
  #   container_name: grafana
  #   restart: unless-stopped
  #   environment:
  #     - TERM=linux
  #     - GF_INSTALL_PLUGINS=grafana-clock-panel,grafana-polystat-panel
  #   ports:
  #     - '3000:3000'
  #   volumes:
  #     - 'grafana_storage:/var/lib/grafana'


  kafka-zookeeper:
    image: confluentinc/cp-zookeeper:5.5.3
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-enterprise-kafka:5.5.3
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9500:9000"
    environment:
      KAFKA_BROKERCONNECT: "kafka:9092"
    depends_on:
      - "kafka"

